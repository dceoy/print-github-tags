#!/usr/bin/env bash
#
# Tiny command to fetch repository tags or releases from GitHub
#
# Usage:
#   print-github-tags -h|--help
#   print-github-tags -v|--version
#   print-github-tags [--release] [--latest] [--tar|--zip] <owner>/<repo>
#
# Options:
#   -h, --help        Print usage
#   -v, --version     Print version information
#   --release         Print only releases
#   --latest          Print a latest tag or release
#   --tar             Print tar file URLs (.tar.gz)
#   --zip             Print zip file URLs (.zip)
#
# Example:
#   $ print-github-tags --release --latest --tar curl/curl

set -e

[[ "${1}" = '--debug' ]] && set -x && shift 1

COMMAND_NAME='print-github-tags'
COMMAND_VERSION='v0.1.0'
COMMAND_PATH="$(dirname ${0})/$(basename ${0})"
RELEASE=0
LATEST=0
TAR=0
ZIP=0
OWNER_REPO=''

function print_version {
  echo "${COMMAND_NAME}: ${COMMAND_VERSION}"
}

function print_usage {
  sed -ne '1,2d; /^#/!q; s/^#$/# /; s/^# //p;' "${COMMAND_PATH}"
}

function abort {
  echo "${COMMAND_NAME}: ${*}" >&2
  exit 1
}

while [[ -n "${1}" ]]; do
  case "${1}" in
    '-v' | '--version' )
      print_version && exit 0
      ;;
    '-h' | '--help' )
      print_usage && exit 0
      ;;
    '--release' )
      RELEASE=1 && shift 1
      ;;
    '--latest' )
      LATEST=1 && shift 1
      ;;
    '--tar' )
      [[ ${ZIP} -ne 0 ]] && print_usage && exit 1
      TAR=1 && shift 1
      ;;
    '--zip' )
      [[ ${TAR} -ne 0 ]] && print_usage && exit 1
      ZIP=1 && shift 1
      ;;
    * )
      if [[ "${1:0:1}" = '-' ]]; then
        abort "invalid option \`${1}\`"
      elif [[ -z "${OWNER_REPO}" ]] && [[ "${1}" =~ ^[a-zA-Z0-9_-]+/[a-zA-Z0-9_-]+$ ]]; then
        OWNER_REPO="${1}" && shift 1
      else
        print_usage && exit 1
      fi
      ;;
  esac
done

set -u

[[ -z "${OWNER_REPO}" ]] && print_usage && exit 1

if [[ ${RELEASE} -eq 1 ]]; then
  API_URL="https://api.github.com/repos/${OWNER_REPO}/releases"
  KEY='tag_name'
else
  API_URL="https://api.github.com/repos/${OWNER_REPO}/tags"
  KEY='name'
fi

CMD="curl -sS ${API_URL} | grep '\"${KEY}\":' | cut -d '\"' -f 4"

if [[ ${LATEST} -eq 1 ]]; then
  CMD="${CMD} | head -1"
fi

if [[ ${TAR} -eq 1 ]]; then
  CMD="${CMD} | xargs -I {} echo 'https://github.com/${OWNER_REPO}/archive/{}.tar.gz'"
elif [[ ${ZIP} -eq 1 ]]; then
  CMD="${CMD} | xargs -I {} echo 'https://github.com/${OWNER_REPO}/archive/{}.zip'"
fi

bash -c "${CMD}"
